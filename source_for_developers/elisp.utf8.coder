;----------------------------------------------;
;           Coder plugin syntax file           ;
;----------------------------------------------;

; Highlight Elisp (Emacs Lisp) files.
; https://github.com/cuprum/AkelPad_coders/blob/master/elisp.coder

;Colors
; Color need to be in #RRGGBB format.
; If color equal to zero, then color ignored.
;
;Font styles
; 0  ignored.
; 1  normal.
; 2  bold.
; 3  italic.
; 4  bold italic.
;
;For comfort file viewing/editing set tab size to 8.


Files:
;==========
;File types
;==========
*.el


;----------------------------------------------;
;                  HighLight                   ;
;----------------------------------------------;

;Flags (sum of the members)
;     1  case sensitive.
;     2  word is a composition of characters ("Words:" section only). Example: "0123456789" - highlight words that contain only digits.
;     4  quote end required ("Quotes:" section only).
;     8  quote start string is ignored and last meet delimiter used as quote start ("Quotes:" section only).
;    16  quote end string is ignored and first meet delimiter used as quote end ("Quotes:" section only).
;    32  don't highlight quote start ("Quotes:" section only).
;    64  don't highlight quote end ("Quotes:" section only).
;   128  don't catch and don't highlight quote start ("Quotes:" section only).
;   256  don't catch and don't highlight quote end ("Quotes:" section only).
;   512  quote start, delimiter or word located at line start.
;  1024  quote end, delimiter or word located at line end.
;  2048  quote start is surrounded with delimiters ("Quotes:" section only).
;  4096  quote end is surrounded with delimiters ("Quotes:" section only).
;  8192  quote doesn't contain delimiters ("Quotes:" section only).
; 16384  only quote start string is catched ("Quotes:" section only).
; 32768  quote doesn't contain any character ("Quotes:" section only).


Font:
;=================================================================
;FontStyle             FontSize              FaceName
;=================================================================
${HighLight_FontStyle} ${HighLight_FontSize} ${HighLight_FaceName}


Colors:
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
;BasicTextColor             BasicBkColor              SelTextColor              SelBkColor              LineTextColor              LineBkColor              LineBorderColor              AltTextColor              AltBkColor              AltBorderColor              ColumnColor              MarkerColor              CaretColor              UrlColor              ActiveUrlColor              VisitUrlColor
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
${HighLight_BasicTextColor} ${HighLight_BasicBkColor} ${HighLight_SelTextColor} ${HighLight_SelBkColor} ${HighLight_LineTextColor} ${HighLight_LineBkColor} ${HighLight_LineBorderColor} ${HighLight_AltTextColor} ${HighLight_AltBkColor} ${HighLight_AltBorderColor} ${HighLight_ColumnColor} ${HighLight_MarkerColor} ${HighLight_CaretColor} ${HighLight_UrlColor} ${HighLight_ActiveUrlColor} ${HighLight_VisitUrlColor}


BkImage:
;==================================================
;BkImageFile              BkImageAlpha
;==================================================
${HighLight_BkImageFile}  ${HighLight_BkImageAlpha}


AutoMark:
;====================================================================================================================
;AutoMarkFlags             AutoMarkFontStyle              AutoMarkTextColor              AutoMarkBkColor
;====================================================================================================================
${HighLight_AutoMarkFlags} ${HighLight_AutoMarkFontStyle} ${HighLight_AutoMarkTextColor} ${HighLight_AutoMarkBkColor}


Quotes:
;======================================================================================
;Flags  Pattern  "\BackRef=(FontStyle,ColorText,ColorBk) \BackRef=..."  ParentID RuleID
;======================================================================================
;===================================================================================
;Flags  Font    Color   Color   Quote   Quote   Escape  Quote   Quote   Parent  Rule
;       style   text    bkgrnd  start   end     char    include exclude ID      ID  
;===================================================================================
;5=1+4
5	0	${STR}	0	`"`	`"`	"\"	""	""	0	0
1	3	${COMM}	0	";"	""	""	""	""	0	0


QuotesRE:
;================================================================================================================
;Flags  Pattern                              \BackRef=(FontStyle,ColorText,ColorBk) \BackRef=...  ParentID RuleID
;================================================================================================================
0	`\B(:[\w\-]+)\b`  "\1=(0,${ATTR},0)"             0        0


Delimiters:
;===============================================
;Flags  Font    Color   Color   Char(s)   Parent
;       style   text    bkgrnd            ID
;===============================================
1	0	0	0	" "
1	0	0	0	"	"
1	0	0	0	`"`
1	0	0	0	`'`
1	0	0	0	(
1	0	0	0	)


Words:
;=================================================
;Flags  Font    Color   Color   Word        Parent
;       style   text    bkgrnd              ID
;=================================================
0	0	${IF}	0	catch
0	0	${IF}	0	condition-case
0	0	${IF}	0	declare-function
0	0	${IF}	0	defconst
0	0	${IF}	0	defcustom
0	0	${IF}	0	defgroup
0	0	${IF}	0	defmacro
0	0	${IF}	0	defvar
0	0	${IF}	0	dolist
0	0	${IF}	0	eq
0	0	${IF}	0	equal
0	0	${IF}	0	interactive
0	0	${IF}	0	let
0	0	${IF}	0	let*
0	0	${IF}	0	provide
0	0	${IF}	0	require
0	0	${IF}	0	set
0	0	${IF}	0	setq
0	0	${IF}	0	throw
0	0	${IF}	0	while
; Functions
0	0	${IF}	0	always
0	0	${IF}	0	apply
0	0	${IF}	0	apply-partially
0	0	${IF}	0	cl-call-next-method
0	0	${IF}	0	cl-defgeneric
0	0	${IF}	0	cl-defmethod
0	0	${IF}	0	cl-defun
0	0	${IF}	0	cl-next-method-p
0	0	${IF}	0	defalias
0	0	${IF}	0	defun
0	0	${IF}	0	fboundp
0	0	${IF}	0	fmakunbound
0	0	${IF}	0	fset
0	0	${IF}	0	funcall
0	0	${IF}	0	function
0	0	${IF}	0	identity
0	0	${IF}	0	ignore
0	0	${IF}	0	lambda
0	0	${IF}	0	mapc
0	0	${IF}	0	mapcan
0	0	${IF}	0	mapcar
0	0	${IF}	0	mapconcat
0	0	${IF}	0	symbol-function
; Lists
0	0	${IF}	0	add-to-list
0	0	${IF}	0	add-to-ordered-list
0	0	${IF}	0	alist-get
0	0	${IF}	0	append
0	0	${IF}	0	assoc
0	0	${IF}	0	assoc-default
0	0	${IF}	0	assoc-delete-all
0	0	${IF}	0	assq
0	0	${IF}	0	assq-delete-all
0	0	${IF}	0	atom
0	0	${IF}	0	butlast
0	0	${IF}	0	caar
0	0	${IF}	0	cadr
0	0	${IF}	0	car
0	0	${IF}	0	car-safe
0	0	${IF}	0	cdar
0	0	${IF}	0	cddr
0	0	${IF}	0	cdr
0	0	${IF}	0	cdr-safe
0	0	${IF}	0	cons
0	0	${IF}	0	consp
0	0	${IF}	0	copy-alist
0	0	${IF}	0	copy-tree
0	0	${IF}	0	delete
0	0	${IF}	0	delete-dups
0	0	${IF}	0	delq
0	0	${IF}	0	ensure-list
0	0	${IF}	0	flatten-tree
0	0	${IF}	0	last
0	0	${IF}	0	lax-plist-get
0	0	${IF}	0	lax-plist-put
0	0	${IF}	0	let-alist
0	0	${IF}	0	list
0	0	${IF}	0	listp
0	0	${IF}	0	make-list
0	0	${IF}	0	member
0	0	${IF}	0	member-ignore-case
0	0	${IF}	0	memq
0	0	${IF}	0	memql
0	0	${IF}	0	nbutlast
0	0	${IF}	0	nconc
0	0	${IF}	0	nlistp
0	0	${IF}	0	nth
0	0	${IF}	0	nthcdr
0	0	${IF}	0	null
0	0	${IF}	0	number-sequence
0	0	${IF}	0	plist-get
0	0	${IF}	0	plist-member
0	0	${IF}	0	plist-put
0	0	${IF}	0	pop
0	0	${IF}	0	proper-list-p
0	0	${IF}	0	push
0	0	${IF}	0	rassoc
0	0	${IF}	0	rassq
0	0	${IF}	0	rassq-delete-all
0	0	${IF}	0	remove
0	0	${IF}	0	remq
0	0	${IF}	0	safe-length
0	0	${IF}	0	setcar
0	0	${IF}	0	setcdr
; Boolen
0	0	${NUM}	0	t
0	0	${NUM}	0	nil
; Conditionals
0	0	${OP}	0	and
0	0	${OP}	0	cond
0	0	${OP}	0	if
0	0	${OP}	0	not
0	0	${OP}	0	or
0	0	${OP}	0	unless
0	0	${OP}	0	when
0	0	${OP}	0	xor


;----------------------------------------------;
;                   CodeFold                   ;
;----------------------------------------------;

;Flags (sum of the members)
;       1  case sensitive.
;       2  force get fold name for function list from left at the fold start ("Folds:" section only).
;       4  force get fold name for function list from right at the fold start, including fold start ("Folds:" section only).
;       8  fold start ("Folds:" section) or skip start ("Skips:" section) located at line start.
;      16  fold start ("Folds:" section) or skip start ("Skips:" section) located at line end.
;      32  fold end ("Folds:" section) or skip end ("Skips:" section) located at line start.
;      64  fold end ("Folds:" section) or skip end ("Skips:" section) located at line end.
;     128  don't catch fold end ("Folds:" section) or skip end ("Skips:" section).
;     256  additional to 128 flag - more priority is given to sibling level instead of parent level ("Folds:" section only).
;     512  comment fold - fold ignore any other folds and skips inside ("Folds:" section only).
;    1024  reserved.
;    2048  deny fold - founded fold will be ignored ("Folds:" section only).
;    4096  xml fold - "<tag" and "</tag>", "<single" and "/>", "<single" and ">" ("Folds:" section only).
;    8192  don't check delimiters from left of fold start ("Folds:" section only).
;   16384  don't check delimiters from right of fold start ("Folds:" section only).
;   32768  don't check delimiters from left of fold end ("Folds:" section only).
;   65536  don't check delimiters from right of fold end ("Folds:" section only).
;  131072  deny delimiters ("Folds:" section only).
;  262144  don't show fold in list ("Folds:" section only).
; 1048576  regular expression in fold start ("Folds:" section) or skip start ("Skips:" section).
; 2097152  regular expression in fold end ("Folds:" section) or skip end ("Skips:" section).


FoldPanel:
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;PanelFirstBkColor            PanelSecondBkColor             PanelNormalFoldColor             PanelActiveFoldColor             PanelNormalNodeOpenBkColor             PanelNormalNodeCloseBkColor             PanelActiveNodeOpenBkColor             PanelActiveNodeCloseBkColor             PanelNormalNodeOpenSignColor             PanelNormalNodeCloseSignColor             PanelActiveNodeOpenSignColor             PanelActiveNodeCloseSignColor
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${CodeFold_PanelFirstBkColor} ${CodeFold_PanelSecondBkColor} ${CodeFold_PanelNormalFoldColor} ${CodeFold_PanelActiveFoldColor} ${CodeFold_PanelNormalNodeOpenBkColor} ${CodeFold_PanelNormalNodeCloseBkColor} ${CodeFold_PanelActiveNodeOpenBkColor} ${CodeFold_PanelActiveNodeCloseBkColor} ${CodeFold_PanelNormalNodeOpenSignColor} ${CodeFold_PanelNormalNodeCloseSignColor} ${CodeFold_PanelActiveNodeOpenSignColor} ${CodeFold_PanelActiveNodeCloseSignColor}


FoldList:
;================================================
;ListTextColor            ListBkColor
;================================================
${CodeFold_ListTextColor} ${CodeFold_ListBkColor}


TagMark:
;============================================================================================================
;TagMarkFlags            TagMarkFontStyle             TagMarkTextColor             TagMarkBkColor
;============================================================================================================
${CodeFold_TagMarkFlags} ${CodeFold_TagMarkFontStyle} ${CodeFold_TagMarkTextColor} ${CodeFold_TagMarkBkColor}


Skips:
;=============================
;Flags  Skip    Skip    Escape
;       start   end     char
;=============================
1	`"`	`"`	""
1	";"	""	""


Folds:
;====================================================================================
;Flags  Font    Color   Color   Fold      Fold      Delimiters   Parent  Rule    Rule
;       style   text    bkgrnd  start     end                    ID      ID      file
;====================================================================================
;393729‬=1+512+131072+262144
393729  0      ${STR}  0     `"`	`"`	`\`
1       0      0       0     `(`	`)`	""

;----------------------------------------------;
;                 AutoComplete                 ;
;----------------------------------------------;

;Flags (sum of the members)
;  1  force case sensitive.
;  2  force case insensitive.
;  4  regular expression (only for "$="). Scan starts from caret line beginning and metacharacters \a or \z specified caret position.
;  8  Don't show in listbox.


CompleteList:
;=====================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;ListFontStyle                ListFontSize                 ListFaceName                 ListLineGap                 ListBlockIcon `"C:\1.dll", 0` ListBlockIconMargins "left;right"    ListHlBaseIcon `"C:\1.dll", 0` ListHlBaseIconMargins "left;right"    ListDocWordIcon `"C:\1.dll", 0` ListDocWordIconMargins "left;right"    ListBasicTextColor                 ListBasicBkColor                 ListSelTextColor                 ListSelBkColor
;=====================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${AutoComplete_ListFontStyle} ${AutoComplete_ListFontSize} ${AutoComplete_ListFaceName} ${AutoComplete_ListLineGap} ${AutoComplete_ListBlockIcon} ${AutoComplete_ListBlockIconMargins} ${AutoComplete_ListHlBaseIcon} ${AutoComplete_ListHlBaseIconMargins} ${AutoComplete_ListDocWordIcon} ${AutoComplete_ListDocWordIconMargins} ${AutoComplete_ListBasicTextColor} ${AutoComplete_ListBasicBkColor} ${AutoComplete_ListSelTextColor} ${AutoComplete_ListSelBkColor}


Blocks:
;=============================================================================
;Abbreviations and blocks
;
; $~abbr         normal abbreviation.
; $(flags)~abbr  normal abbreviation with flags.
; $=abbr         exact abbreviation. May contain delimiters.
; $(flags)=abbr  exact abbreviation with flags. May contain delimiters.
; $[]            set caret to this position. Can be multiple (hot spots).
; $[text]        select text. Can be multiple (hot spots).
; $$             symbol $.
; $\]            escape symbol ]. Can be used in $[text] block: $[One [1$\] ].
; ${VAR}         variable assigned from Coder::Settings.
; $;             comment line.
;=============================================================================

